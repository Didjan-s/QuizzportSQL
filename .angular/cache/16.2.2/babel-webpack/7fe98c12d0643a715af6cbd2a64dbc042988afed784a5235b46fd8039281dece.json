{"ast":null,"code":"var _class;\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/auth.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nfunction LoginViewComponent_div_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 14)(1, \"p\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r0.loginMessage);\n  }\n}\nexport class LoginViewComponent {\n  constructor(authService, router) {\n    this.authService = authService;\n    this.router = router;\n    this.loginForm = new FormGroup({\n      email: new FormControl('', Validators.required),\n      ticket: new FormControl('', Validators.required)\n    }, Validators.required);\n  }\n  onLogin() {\n    if (this.loginForm.valid) {\n      const user = {\n        email: this.loginForm.value.email,\n        ticket: this.loginForm.value.ticket,\n        firstName: '',\n        lastName: ''\n      };\n      this.authService.login(user).subscribe({\n        next: () => {\n          this.router.navigate(['home']);\n        },\n        error: err => {\n          this.loginMessage = err.error.message;\n          console.log(this.loginMessage);\n        }\n      });\n    } else {\n      this.loginMessage = \"Form not valid\";\n    }\n  }\n}\n_class = LoginViewComponent;\n_class.ɵfac = function LoginViewComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.AuthService), i0.ɵɵdirectiveInject(i2.Router));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-login-view\"]],\n  decls: 19,\n  vars: 2,\n  consts: [[1, \"container\"], [1, \"row\", \"align-items-center\", \"justify-content-center\", \"vh-100\", \"w-100\", \"text-center\"], [1, \"col-sm-8\", \"col-md-4\", \"col-xl-4\", \"card\"], [1, \"col-12\"], [\"src\", \"../../assets/logo/app-logo-estp-removebg-preview.png\", \"alt\", \"\", \"width\", \"25%\"], [1, \"justify-content-center\", \"row\", \"p-3\", \"gy-4\", 3, \"formGroup\", \"ngSubmit\"], [1, \"col-8\"], [\"for\", \"formMail\"], [\"formControlName\", \"email\", \"type\", \"text\", \"id\", \"formEmail\", \"required\", \"\", \"placeholder\", \"email\", 1, \"form-control\"], [\"for\", \"formTicket\"], [\"formControlName\", \"ticket\", \"type\", \"text\", \"id\", \"formTicket\", \"placeholder\", \"n\\u00B0 Ticket\", \"required\", \"\", 1, \"form-control\"], [1, \"btn\", \"btn-primary\", \"rounded-pill\"], [1, \"bi\", \"bi-box-arrow-in-right\"], [\"class\", \"col-12 text-danger\", 4, \"ngIf\"], [1, \"col-12\", \"text-danger\"]],\n  template: function LoginViewComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3);\n      i0.ɵɵelement(4, \"img\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"form\", 5);\n      i0.ɵɵlistener(\"ngSubmit\", function LoginViewComponent_Template_form_ngSubmit_5_listener() {\n        return ctx.onLogin();\n      });\n      i0.ɵɵelementStart(6, \"div\", 6)(7, \"label\", 7);\n      i0.ɵɵtext(8, \"Email\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(9, \"input\", 8);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"div\", 6)(11, \"label\", 9);\n      i0.ɵɵtext(12, \"n\\u00B0 Ticket\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(13, \"input\", 10);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"div\", 3)(15, \"button\", 11)(16, \"i\", 12);\n      i0.ɵɵtext(17, \" Let's go!\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵtemplate(18, LoginViewComponent_div_18_Template, 3, 1, \"div\", 13);\n      i0.ɵɵelementEnd()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n      i0.ɵɵadvance(13);\n      i0.ɵɵproperty(\"ngIf\", ctx.loginMessage);\n    }\n  },\n  dependencies: [i3.NgIf, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.RequiredValidator, i4.FormGroupDirective, i4.FormControlName],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["FormControl","FormGroup","Validators","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","ctx_r0","loginMessage","LoginViewComponent","constructor","authService","router","loginForm","email","required","ticket","onLogin","valid","user","value","firstName","lastName","login","subscribe","next","navigate","error","err","message","console","log","ɵɵdirectiveInject","i1","AuthService","i2","Router","selectors","decls","vars","consts","template","LoginViewComponent_Template","rf","ctx","ɵɵelement","ɵɵlistener","LoginViewComponent_Template_form_ngSubmit_5_listener","ɵɵtemplate","LoginViewComponent_div_18_Template","ɵɵproperty"],"sources":["C:\\Users\\Didjan\\Documents\\QuizzportSQL\\Quizzport\\src\\app\\views\\login-view\\login-view.component.ts","C:\\Users\\Didjan\\Documents\\QuizzportSQL\\Quizzport\\src\\app\\views\\login-view\\login-view.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { User } from 'src/app/models/user/user';\nimport { AuthService } from 'src/app/services/auth.service';\n\n\n@Component({\n  selector: 'app-login-view',\n  templateUrl: './login-view.component.html',\n  styleUrls: ['./login-view.component.css']\n})\nexport class LoginViewComponent {\n\n  loginMessage : string | undefined\n\n  loginForm = new FormGroup({\n    email : new FormControl('',Validators.required),\n    ticket : new FormControl('',Validators.required)\n  },Validators.required)\n\n  constructor(private authService : AuthService, private router : Router){\n\n  }\n\n  onLogin(){\n    \n    if(this.loginForm.valid){\n\n      const user : User = {\n        email : this.loginForm.value.email,\n        ticket : this.loginForm.value.ticket,\n        firstName : '',\n        lastName : ''\n      }    \n  \n      this.authService.login(user).subscribe({\n        next : () => {\n          this.router.navigate(['home'])\n        },\n        error : (err)=> {\n          this.loginMessage = err.error.message\n          console.log(this.loginMessage);\n          \n        }\n        }\n      )\n    }else{\n      this.loginMessage = \"Form not valid\"\n    }\n\n  }\n}\n","<div class=\"container \">\n\n    <div class=\"row align-items-center justify-content-center vh-100 w-100 text-center\">\n\n        <div class=\"col-sm-8 col-md-4 col-xl-4  card\">\n            <div class=\"col-12\">\n                <img src=\"../../assets/logo/app-logo-estp-removebg-preview.png\" alt=\"\" width=\"25%\">\n            </div>\n            <form [formGroup]=\"loginForm\" class=\"justify-content-center row p-3 gy-4\" (ngSubmit)=\"onLogin()\">\n                \n                <div class=\"col-8\">\n                    <label for=\"formMail\">Email</label>\n                    <input formControlName=\"email\" type=\"text\" class=\"form-control\" id=\"formEmail\" required placeholder=\"email\">\n                </div>\n\n                <div class=\"col-8\">\n                    <label for=\"formTicket\">n° Ticket</label>\n                    <input formControlName=\"ticket\" type=\"text\" id=\"formTicket\" placeholder=\"n° Ticket\" class=\"form-control\" required>\n                </div>\n\n                <div class=\"col-12\">\n                    <button class=\"btn btn-primary rounded-pill\">\n\n                        <i class=\"bi bi-box-arrow-in-right\"> Let's go!</i>\n                        \n                    </button>\n                </div>\n\n                <div *ngIf=\"loginMessage\" class=\"col-12 text-danger\">\n                    <p>{{loginMessage}}</p>\n                </div>\n\n            </form>\n\n        </div>\n\n    </div>\n    \n</div>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}