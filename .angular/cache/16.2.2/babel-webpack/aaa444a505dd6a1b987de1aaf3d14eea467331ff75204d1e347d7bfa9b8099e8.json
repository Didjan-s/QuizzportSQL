{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class AuthService {\n  constructor(http) {\n    this.http = http;\n  }\n  checkJwtToken() {\n    return this.http.get('http://localhost:3000/api/checkUser', {\n      withCredentials: true\n    });\n  }\n  login(user) {\n    return this.http.post('http://localhost:3000/api/login', user, {\n      withCredentials: true\n    });\n  }\n  logout() {\n    return this.http.get('http://localhost:3000/api/logout', {\n      withCredentials: true\n    });\n  }\n}\n_class = AuthService;\n_class.ɵfac = function AuthService_Factory(t) {\n  return new (t || _class)(i0.ɵɵinject(i1.HttpClient));\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["AuthService","constructor","http","checkJwtToken","get","withCredentials","login","user","post","logout","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Didjan\\Documents\\QuizzportSQL\\Quizzport\\src\\app\\services\\auth.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { User } from '../models/user/user';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  constructor(private http : HttpClient) { }\n\n  checkJwtToken() : Observable<boolean> {\n\n    return this.http.get<boolean>('http://localhost:3000/api/checkUser',{\n      withCredentials : true,\n    });\n\n  }\n\n  login(user : User):Observable<User>{\n\n    return this.http.post<User>('http://localhost:3000/api/login',user,{withCredentials : true})\n  }\n\n  logout() : Observable<any>{\n\n    return this.http.get<any>('http://localhost:3000/api/logout',{\n      withCredentials : true,\n    });\n\n  }\n}\n"],"mappings":";;;AAQA,OAAM,MAAOA,WAAW;EACtBC,YAAoBC,IAAiB;IAAjB,KAAAA,IAAI,GAAJA,IAAI;EAAiB;EAEzCC,aAAaA,CAAA;IAEX,OAAO,IAAI,CAACD,IAAI,CAACE,GAAG,CAAU,qCAAqC,EAAC;MAClEC,eAAe,EAAG;KACnB,CAAC;EAEJ;EAEAC,KAAKA,CAACC,IAAW;IAEf,OAAO,IAAI,CAACL,IAAI,CAACM,IAAI,CAAO,iCAAiC,EAACD,IAAI,EAAC;MAACF,eAAe,EAAG;IAAI,CAAC,CAAC;EAC9F;EAEAI,MAAMA,CAAA;IAEJ,OAAO,IAAI,CAACP,IAAI,CAACE,GAAG,CAAM,kCAAkC,EAAC;MAC3DC,eAAe,EAAG;KACnB,CAAC;EAEJ;;SAtBWL,WAAW;;mBAAXA,MAAW,EAAAU,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;;SAAXb,MAAW;EAAAc,OAAA,EAAXd,MAAW,CAAAe,IAAA;EAAAC,UAAA,EAFV;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}